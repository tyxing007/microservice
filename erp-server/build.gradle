apply plugin: 'jacoco' //calculate code coverage
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: "io.spring.dependency-management"


jar {
    baseName = 'erp-server'
    version = null
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:${theSpringCloudVersion}'
    }
}

buildscript {
	ext {
		springBootVersion = "1.4.1.RELEASE"
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${theSpringBootVersion}")
	}
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.5')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-actuator-docs')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-mail')
//	compile('org.springframework.boot:spring-boot-starter-remote-shell')
	compile('org.springframework.boot:spring-boot-starter-web')

	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security.oauth:spring-security-oauth2')
	compile 'org.springframework.cloud:spring-cloud-starter-oauth2'

	compile('com.fasterxml.jackson.datatype:jackson-datatype-hibernate4:2.7.5')
	compile ('org.springframework.boot:spring-boot-configuration-processor')
    runtime('mysql:mysql-connector-java')
//	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.jayway.jsonpath:json-path:2.2.0')
	testCompile('com.jayway.jsonpath:json-path-assert:2.2.0')
	testCompile('org.subethamail:subethasmtp:3.1.7')

	compile 'org.springframework.cloud:spring-cloud-starter-eureka'
	compile 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
	compile 'org.springframework.cloud:spring-cloud-netflix-hystrix-stream'
	compile 'org.springframework.cloud:spring-cloud-starter-feign'
	compile 'org.springframework.cloud:spring-cloud-starter-config'

	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'org.assertj:assertj-core:3.3.0'
}

springBoot {
    executable = true
}

bootRun {
    systemProperties System.properties
}
